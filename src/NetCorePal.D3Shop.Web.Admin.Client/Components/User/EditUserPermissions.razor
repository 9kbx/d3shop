@using NetCorePal.D3Shop.Domain.AggregatesModel.Identity.AdminUserAggregate
<a @onclick="ShowModal">配置权限</a>
<Modal Title="@("配置权限")"
       Visible="@_modalVisible"
       OnOk="Modal_HandleOk"
       OnCancel="() => _modalVisible = false"
       ConfirmLoading="@_modalConfirmLoading">

    <Tree @ref="_tree"
          TItem="string"
          Checkable
          @bind-CheckedKeys="_treeCheckedKeys">
        @foreach (var group in _permissions.GroupBy(p => p.GroupName))
        {
            <TreeNode Title="@group.Key" Key="@group.Key">
                @foreach (var permission in group)
                {
                    <TreeNode Title="@permission.Remark" Key="@permission.Code" Checked="permission.IsAssigned"
                              DisableCheckbox="permission.IsFromRole"/>
                }
            </TreeNode>
        }
    </Tree>
</Modal>

@code {
    [CascadingParameter] public AdminUserResponse Row { get; set; } = default!;
    [Inject] private IAdminUserService AdminUserService { get; set; } = default!;

    [Inject] private MessageService Message { get; set; } = default!;
    private string[] _treeCheckedKeys = [];
    private AdminUserPermissionResponse[] _permissions = [];
    private Tree<string> _tree = default!;

    private bool _modalVisible;
    private bool _modalConfirmLoading;

    private async Task ShowModal()
    {
        _modalVisible = true;
        _permissions = await GetAssignedPermissions(Row.Id);
    }

    private async Task<AdminUserPermissionResponse[]> GetAssignedPermissions(AdminUserId id)
    {
        var response = await AdminUserService.GetAdminUserPermissions(id);
        if (response.Success) return response.Data.ToArray();
        _ = Message.Error(response.Message);
        return [];
    }

    private async Task Modal_HandleOk()
    {
        _modalConfirmLoading = true;
        StateHasChanged();
        var permissions = _treeCheckedKeys.Except(
            _permissions.Where(p => p.IsFromRole).Select(p => p.Code));
        var response = await AdminUserService.SetAdminUserSpecificPermissions(Row.Id, permissions);
        _modalConfirmLoading = false;
        if (response.Success)
        {
            _modalVisible = false;
            _ = Message.Success("更新成功！");
        }
        else
        {
            _ = Message.Error(response.Message);
        }
    }

}