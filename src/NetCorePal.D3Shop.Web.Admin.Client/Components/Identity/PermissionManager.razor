@{
    const string buttonType = ButtonType.Dashed;
    // ReSharper disable once AccessToStaticMemberViaDerivedType
    const string buttonSize = ButtonSize.Small;
}
<GridRow Gutter="16">
    <GridCol>
        <Button Type="@buttonType" Size="@buttonSize"
                @onclick="() => { foreach (var tree in _treeDir.Values) tree.CheckAll();}">
            全选
        </Button>
    </GridCol>
    <GridCol>
        <Button Type="@buttonType" Size="@buttonSize"
                @onclick="() => { foreach (var tree in _treeDir.Values) tree.UncheckAll(); }">
            取消全选
        </Button>
    </GridCol>
</GridRow>
<Divider />
<Tabs DefaultActiveKey="@PermissionGroups.FirstOrDefault()?.Name" TabPosition="TabPosition.Left">
    @foreach (var permissionGroup in PermissionGroups)
    {
        <TabPane Key="@permissionGroup.Name" Tab="@permissionGroup.Name">
            <GridRow @key="permissionGroup.Name" Gutter="16">
                <GridCol Span="10">
                    <h3>@permissionGroup.Name</h3>
                </GridCol>
                <GridCol Offset="3">
                    <Button Type="@buttonType" Size="@buttonSize"
                            @onclick="() => _treeDir[permissionGroup.Name].CheckAll()">
                        全选
                    </Button>
                </GridCol>
                <GridCol>
                    <Button Type="@buttonType" Size="@buttonSize"
                            @onclick="() => _treeDir[permissionGroup.Name].UncheckAll()">
                        取消全选
                    </Button>
                </GridCol>
            </GridRow>
            <Divider />
            <Tree @key="@Id"
                  TItem="Permission"
                  @ref="_treeDir[permissionGroup.Name]"
                  Id="@permissionGroup.Name"
                  Checkable="true"
                  DataSource="permissionGroup.Permissions"
                  TitleExpression="x => x.DataItem.DisplayName"
                  KeyExpression="x => x.DataItem.Code"
                  ChildrenExpression="x =>  x.DataItem.Children"
                  DefaultCheckedKeys="AssignedPermissionCodes.Intersect(_treeKeysDir[permissionGroup.Name]).ToArray()"
                  DisabledExpression="x => DisabledPermissionCodes.Contains(x.DataItem.Code) || !x.DataItem.IsEnabled"
                  CheckStrictly="true"
                  DefaultExpandAll="true"
                  OnCheck="_treeOnChangeEventDir[permissionGroup.Name]" />
        </TabPane>
    }
</Tabs>